name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  frontend-lint:
    name: Frontend Lint
    uses: ./.github/workflows/frontend-lint.yml
    secrets: inherit

  frontend-build:
    name: Frontend Build
    uses: ./.github/workflows/frontend-build.yml
    secrets: inherit

  backend-lint:
    name: Backend Lint
    uses: ./.github/workflows/backend-lint.yml
    secrets: inherit

  backend-build:
    name: Backend Build
    uses: ./.github/workflows/backend-build.yml
    secrets: inherit

  integration-test:
    name: Integration Test
    runs-on: ubuntu-latest
    needs: [frontend-build, backend-build]

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: app
          POSTGRES_PASSWORD: app
          POSTGRES_DB: app
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis:7
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version-file: '.nvmrc'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install frontend dependencies
      working-directory: ./frontend
      run: npm ci

    - name: Build frontend
      working-directory: ./frontend
      run: npm run build

    - name: Build backend
      run: ./backend/gradlew build -x test

    - name: Start backend
      run: |
        java -jar backend/build/libs/*.jar &
        sleep 30
      env:
        SPRING_PROFILES_ACTIVE: test
        SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/app
        SPRING_DATASOURCE_USERNAME: app
        SPRING_DATASOURCE_PASSWORD: app
        SPRING_DATA_REDIS_HOST: localhost
        SPRING_DATA_REDIS_PORT: 6379

    - name: Test API endpoints
      run: |
        curl -f http://localhost:8080/api/health || exit 1
        curl -f http://localhost:8080/api/hello || exit 1
        curl -f http://localhost:8080/api/users || exit 1

    - name: Test frontend build
      working-directory: ./frontend
      run: |
        npm run start &
        sleep 10
        curl -f http://localhost:3000 || exit 1
